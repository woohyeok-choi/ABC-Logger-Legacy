apply plugin: 'com.google.protobuf'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.objectbox'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

android {
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    signingConfigs {
        iclab_abc {
            keyAlias 'abc'
            keyPassword 'iclabsystem12!@'
            storeFile file('D:\\Workspace\\Projects\\key-store\\abc-iclab-kaist-key-store.jks')
            storePassword 'iclabsystem12!@'
        }
    }

    dexOptions {
        maxProcessCount 6
        javaMaxHeapSize "2g"
    }

    compileSdkVersion 28

    defaultConfig {
        applicationId "kaist.iclab.abc"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 42
        versionName "2.1.5.3"
        setProperty('archivesBaseName', applicationId + "-v" + versionName)

        buildConfigField("String", "SERVER_ADDRESS", "\"abc.kaist.ac.kr:50051\"")
        resValue("string", "version_name", "$versionName")
        resValue("bool", "is_debug_mode", "false")
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFile 'D:/Workspace/Projects/ai-flagship-iclab/client-side/smartphone-android/app/proguard-rules.pro'
            signingConfig signingConfigs.iclab_abc
        }
        debug {
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        main.proto.srcDirs += '../../../protos'
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    buildToolsVersion = '28.0.2'
}


dependencies {
    //implementation fileTree(include: ['*.jar'], dir: 'libs')

    /**
     * Kotlin
     */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    //testImplementation "org.jetbrains.kotlin:kotlin-test:${kotlinVersion}"
    //testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}"
    /**
     * Firebase
     */
    implementation "com.google.firebase:firebase-auth:${firebaseAuthVersion}"
    implementation "com.google.firebase:firebase-core:${firebaseCoreVersion}"
    implementation "com.google.firebase:firebase-dynamic-links:${firebaseDynamicLinkVersion}"
    implementation "com.google.firebase:firebase-firestore:${firebaseFireStoreVersion}"
    implementation "com.google.firebase:firebase-messaging:${firebaseMessageVersion}"
    implementation "com.crashlytics.sdk.android:crashlytics:${firebaseCrashlyticsVersion}"

    /**
     * Support libraries
     */
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:support-v4:${supportLibraryVersion}"
    implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    implementation "com.android.support:support-media-compat:${supportLibraryVersion}"
    implementation "com.android.support:support-fragment:${supportLibraryVersion}"
    implementation "com.android.support:design:${supportLibraryVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${supportLibraryVersion}"
    implementation "com.android.support:preference-v7:${supportLibraryVersion}"

    /**
     * Lifecycle and Workmanager
     */
    implementation "android.arch.lifecycle:extensions:${googleLifecycleVersion}"
    implementation "android.arch.paging:runtime:${googlePagingVersion}"
    implementation "android.arch.work:work-runtime:1.0.0-alpha08"
    //implementation "android.arch.work:work-firebase:${googleWorkManagerVersion}"

    /**
     * Google GMS libraries
     */
    implementation "com.google.android.gms:play-services-location:${googlePlayServiceVersion}"
    implementation "com.google.android.gms:play-services-fitness:${googlePlayServiceVersion}"
    implementation "com.google.android.gms:play-services-auth:${googlePlayServiceAuthVersion}"

    /**
     * GRPC
     */
    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation 'javax.annotation:javax.annotation-api:1.2'

    /**
     * Others
     */
    implementation 'com.beust:klaxon:3.0.1'
    implementation "br.com.simplepass:loading-button-android:${circularLoadingButtonVersion}"
    implementation "gun0912.ted:tedpermission:${tedPermissionVersion}"
    implementation "io.objectbox:objectbox-kotlin:$objectboxVersion"

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protocVersion"
    }

    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:$protocGenVersion"
        }

        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }

    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    option 'lite'
                }
            }
        }
    }
}
